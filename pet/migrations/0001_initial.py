# Generated by Django 2.1.5 on 2019-01-21 15:32

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import separatedvaluesfield.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wx_auth', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flag', models.IntegerField(choices=[(1, 'Yes'), (2, 'No')], default=1)),
                ('audit_status', models.IntegerField(choices=[(0, 'Pending'), (1, 'Passed'), (2, 'Denied')], default=0)),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_update_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_comment', to='wx_auth.UserProfile')),
            ],
        ),
        migrations.CreateModel(
            name='ContactRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flag', models.IntegerField(choices=[(1, 'Yes'), (2, 'No')], default=1)),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_update_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('UserProfile_a', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contact_a', to='wx_auth.UserProfile')),
                ('UserProfile_b', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contact_b', to='wx_auth.UserProfile')),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_contact_relaion', to='wx_auth.UserProfile')),
            ],
        ),
        migrations.CreateModel(
            name='LostFoundTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flag', models.IntegerField(choices=[(1, 'Yes'), (2, 'No')], default=1)),
                ('name', models.CharField(max_length=20)),
                ('count', models.IntegerField(default=0)),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_update_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_lost_found_tag', to='wx_auth.UserProfile')),
                ('last_update_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_lost_found_tag', to='wx_auth.UserProfile')),
            ],
        ),
        migrations.CreateModel(
            name='PetCaseClose',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flag', models.IntegerField(choices=[(1, 'Yes'), (2, 'No')], default=1)),
                ('descrption', models.TextField(blank=True, null=True)),
                ('view_count', models.IntegerField(default=0)),
                ('repost_count', models.IntegerField(default=0)),
                ('like_count', models.IntegerField(default=0)),
                ('reward_charge_status', models.IntegerField(choices=[(0, 'NotPaid'), (1, 'Failed'), (2, 'Succeeded'), (3, 'Free')], default=0)),
                ('reward_charge_amount', models.IntegerField(default=0, help_text='单位分')),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_update_time', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='PetFound',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flag', models.IntegerField(choices=[(1, 'Yes'), (2, 'No')], default=1)),
                ('type', models.IntegerField(choices=[(0, 'Other'), (1, 'Cat'), (2, 'Dog')], default=1)),
                ('color', models.CharField(blank=True, max_length=5, null=True)),
                ('descroption', models.TextField(blank=True, null=True)),
                ('region_id', models.IntegerField(blank=True, null=True)),
                ('place', models.CharField(blank=True, max_length=200, null=True)),
                ('found_status', models.IntegerField(choices=[(0, 'NotAtHand'), (1, 'AtHand'), (2, 'InHospital')], default=0)),
                ('status', models.IntegerField(choices=[(0, 'Valid'), (1, 'Closed'), (2, 'Expired')], default=0)),
                ('audit_status', models.IntegerField(choices=[(0, 'Pending'), (1, 'Passed'), (2, 'Denied')], default=0)),
                ('view_count', models.IntegerField(default=0)),
                ('repost_count', models.IntegerField(default=0)),
                ('like_count', models.IntegerField(default=0)),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_update_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_pet_found', to='wx_auth.UserProfile')),
                ('last_update_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_pet_found', to='wx_auth.UserProfile')),
            ],
        ),
        migrations.CreateModel(
            name='PetFoundInteractHourly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flag', models.IntegerField(choices=[(1, 'Yes'), (2, 'No')], default=1)),
                ('date_id', models.IntegerField(default=None)),
                ('hour_id', models.IntegerField(default=None)),
                ('repost_count', models.IntegerField(default=0)),
                ('like_count', models.IntegerField(default=0)),
                ('pv', models.IntegerField(default=0)),
                ('uv', models.IntegerField(default=0)),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_update_time', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='PetLost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flag', models.IntegerField(choices=[(1, 'Yes'), (2, 'No')], default=1)),
                ('pet_type', models.IntegerField(blank=True, choices=[(0, 'Other'), (1, 'Cat'), (2, 'Dog')], null=True)),
                ('gender', models.IntegerField(choices=[(0, 'Unknown'), (1, 'Male'), (2, 'Female')], default=1)),
                ('color', models.CharField(blank=True, max_length=20, null=True)),
                ('descrption', models.TextField(blank=True, null=True)),
                ('region_id', models.IntegerField(blank=True, null=True)),
                ('place', models.CharField(blank=True, max_length=200, null=True)),
                ('longitude', models.DecimalField(decimal_places=4, default=0, max_digits=10)),
                ('latitude', models.DecimalField(decimal_places=4, default=0, max_digits=10)),
                ('case_status', models.IntegerField(choices=[(0, 'Valid'), (1, 'Closed'), (2, 'Expired')], default=0)),
                ('audit_status', models.IntegerField(choices=[(0, 'Pending'), (1, 'Passed'), (2, 'Denied')], default=0)),
                ('is_in_boost', models.BooleanField(default=False)),
                ('boost_kpi_type', models.IntegerField(choices=[(0, 'NoKpi'), (1, 'ViewAmount')], default=0)),
                ('boost_amount', models.IntegerField(default=0, help_text='单位分')),
                ('boost_scope', models.IntegerField(default=0, help_text='单位米')),
                ('boost_count', models.IntegerField(default=0)),
                ('publish_charge_status', models.IntegerField(choices=[(0, 'NotPaid'), (1, 'Failed'), (2, 'Succeeded'), (3, 'Free')], default=0)),
                ('publish_charge_amount', models.IntegerField(default=0, help_text='单位分')),
                ('view_count', models.IntegerField(default=0)),
                ('repost_count', models.IntegerField(default=0)),
                ('like_count', models.IntegerField(default=0)),
                ('medical_status', separatedvaluesfield.models.SeparatedValuesField(blank=True, choices=[(0, 'None'), (1, 'Sterilized'), (2, 'Vaccinated'), (3, 'Desinsect')], max_length=20, null=True)),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_update_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_pet_losts', to='wx_auth.UserProfile')),
                ('last_update_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_pet_losts', to='wx_auth.UserProfile')),
                ('publiser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='published_losts', to='wx_auth.UserProfile')),
            ],
        ),
        migrations.CreateModel(
            name='PetLostBoost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flag', models.IntegerField(choices=[(1, 'Yes'), (2, 'No')], default=1)),
                ('booster_nickname', models.CharField(blank=True, max_length=20, null=True)),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_update_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('booster', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='boost', to='wx_auth.UserProfile')),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_boost', to='wx_auth.UserProfile')),
                ('last_update_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_boost', to='wx_auth.UserProfile')),
                ('lost', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='boost', to='pet.PetLost')),
                ('publisher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='published_boost', to='wx_auth.UserProfile')),
            ],
        ),
        migrations.CreateModel(
            name='PetLostFoundMatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flag', models.IntegerField(choices=[(1, 'Yes'), (2, 'No')], default=1)),
                ('contact_status', models.IntegerField(choices=[(0, 'LostFound'), (1, 'Clue')])),
                ('static_score', models.IntegerField(default=None)),
                ('feedback_score', models.IntegerField(default=None)),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_update_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lost_found_match_create', to='wx_auth.UserProfile')),
                ('found', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lost_found_match', to='pet.PetFound')),
                ('last_update_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lost_found_match_update', to='wx_auth.UserProfile')),
                ('lost', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lost_found_match', to='pet.PetLost')),
            ],
        ),
        migrations.CreateModel(
            name='PetLostInteractHourly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flag', models.IntegerField(choices=[(1, 'Yes'), (2, 'No')], default=1)),
                ('date_id', models.IntegerField(default=None)),
                ('hour_id', models.IntegerField(default=None)),
                ('repost_count', models.IntegerField(default=0)),
                ('like_count', models.IntegerField(default=0)),
                ('pv', models.IntegerField(default=0)),
                ('uv', models.IntegerField(default=0)),
                ('valid_uv', models.IntegerField(default=0)),
                ('boost_uv', models.IntegerField(default=0)),
                ('boost_amount', models.IntegerField(default=0, help_text='单位分')),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_update_time', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='PetMaterial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flag', models.IntegerField(choices=[(1, 'Yes'), (2, 'No')], default=1)),
                ('mat_type', models.IntegerField(blank=True, choices=[(0, 'Video'), (1, 'Image')], null=True)),
                ('size', models.IntegerField(default=0)),
                ('mime_type', models.CharField(blank=True, max_length=100, null=True)),
                ('url', models.CharField(blank=True, max_length=200, null=True)),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_update_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='material_create', to='wx_auth.UserProfile')),
                ('found', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='materials', to='pet.PetFound')),
                ('last_update_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='material_update', to='wx_auth.UserProfile')),
                ('lost', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='materials', to='pet.PetLost')),
            ],
        ),
        migrations.CreateModel(
            name='PetSpecies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flag', models.IntegerField(choices=[(1, 'Yes'), (2, 'No')], default=1)),
                ('type', models.IntegerField(choices=[(0, 'Other'), (1, 'Cat'), (2, 'Dog')], default=0)),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PrivateContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flag', models.IntegerField(choices=[(1, 'Yes'), (2, 'No')], default=1)),
                ('message', models.TextField(null=True)),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_update_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('UserProfile_a', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='private_contact_a', to='wx_auth.UserProfile')),
                ('UserProfile_b', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='private_contact_b', to='wx_auth.UserProfile')),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_private_contact', to='wx_auth.UserProfile')),
                ('first_found', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pet.PetFound')),
                ('last_update_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_private_contact', to='wx_auth.UserProfile')),
            ],
        ),
        migrations.AddField(
            model_name='petlost',
            name='species',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pet.PetSpecies'),
        ),
        migrations.AddField(
            model_name='petfound',
            name='lost',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pet.PetLost'),
        ),
        migrations.AddField(
            model_name='petfound',
            name='publiser',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='published_founds', to='wx_auth.UserProfile'),
        ),
        migrations.AddField(
            model_name='petfound',
            name='species',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pet.PetSpecies'),
        ),
        migrations.AddField(
            model_name='petcaseclose',
            name='best_found',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lost_case_close', to='pet.PetFound'),
        ),
        migrations.AddField(
            model_name='petcaseclose',
            name='create_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='case_close_create', to='wx_auth.UserProfile'),
        ),
        migrations.AddField(
            model_name='petcaseclose',
            name='last_update_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='case_close_update', to='wx_auth.UserProfile'),
        ),
        migrations.AddField(
            model_name='petcaseclose',
            name='lost',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lost_case_close', to='pet.PetLost'),
        ),
        migrations.AddField(
            model_name='contactrelation',
            name='first_found',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pet.PetFound'),
        ),
        migrations.AddField(
            model_name='contactrelation',
            name='last_update_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_contact_relation', to='wx_auth.UserProfile'),
        ),
        migrations.AddField(
            model_name='comment',
            name='found',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comment', to='pet.PetFound'),
        ),
        migrations.AddField(
            model_name='comment',
            name='last_update_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_comment', to='wx_auth.UserProfile'),
        ),
        migrations.AddField(
            model_name='comment',
            name='lost',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comment', to='pet.PetLost'),
        ),
        migrations.AddField(
            model_name='comment',
            name='publisher',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='published_comment', to='wx_auth.UserProfile'),
        ),
        migrations.AddField(
            model_name='comment',
            name='reply_to',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replies', to='pet.Comment'),
        ),
    ]
